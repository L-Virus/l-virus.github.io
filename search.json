[{"title":"使用Pycharm进行远程ssh（以Featurize为例）","path":"/2025/09/24/使用Pycharm进行进程ssh（以Featurize为例）/","content":"介绍应用背景在使用 Pycharm 专业版的时候进行远程ssh连接服务器（Featurize）的 Python解释器和 Jupyter 远程连接Python 打开Pycharm点击右下角环境配置 点击添加新的解释器 选择基于SSH 选择新建 输入主机、端口以及用户名以Featurize为例子，打开工作区右边的倒三角形 选择Pycharm连接 进入跟着指南操作即可 连接Jupyter 进入工作区打开Terminal 输入jupyter打开jupyter服务 在自己本机上打开终端（win+R），输入cmd，回车进入终端 进行端口映射在终端输入 ssh -L8888:localhost:8888 featurize@workspace.featurize.cn -p port 上述操作是将Featurize服务器中的8888（Jupyter的服务端口）端口映射到本地，port为你的机子在Featurize中的端口，这些信息都可以在教程中查看。按下回车，输入密码即可完成端口映射 进入Pycharm，点击右上角切换Jupyter服务器 选择配置Jupyter服务器 进入Featurize找到token 输入服务器地址和找到的令牌","tags":["Python","服务器"]},{"title":"安装PyTorch及Torchvision","path":"/2025/09/24/安装PyTorch及Torchvision/","content":"1.创建虚拟环境 具体查看我之前写的《在Windows中利用Python的venv和virtualenv创建虚拟环境》 2. 检查显卡版本和CUDA 这种情况是需要电脑上有单独的英伟达的显卡、或者英伟达的显卡和集显这两种情况都是可以的。 3. 下载链接 进入PyTorch官网选择合适自己设备的下载链接 4. 下载 进入cmd 输入上一步获得的下载链接 5. 等待 6. 检测 下载完成后，进入python环境检测torch是否可用 7.下载轮文件 轮文件官网按CTRL+F 搜索对应版本的文件使用Motrix进行下载轮文件（只是因为torch太大采用下载器下载，其他可直接使用浏览器下载），版本对应如下 8.下载Torchvision github pytorch和torchvision版本对应官网 我的对应版本为","tags":["Deep Learning","Python"]},{"title":"Stellar设置专栏（topic）","path":"/2025/09/24/Stellar设置专栏/","content":"专栏文件夹的配置 在 blog/source/_data/ 文件夹中创建一个 topic 文件夹，在其中放入各个专栏的描述文件，文件名就是项目的 id： name: Stellar # 在面包屑导航上会显示较短的名字title: Stellar - 每个人的独立博客 # 在列表页会显示完整的专栏标题description: 关于搭建独立博客相关的知识和经验分享，以及 Stellar 的高级用法、版本更新相关的注意事项。order_by: -date # 默认是按发布日期倒序排序icon: https://xxx 文章中的引用 在此专栏文章的 md 文件的 front-matter 部分指定所属的专栏 id （即上一步创建的文件名 Stelalr设置专栏.yml）","tags":["stellar","Hexo","瞎折腾"]},{"title":"Git配置proxy","path":"/2025/09/24/Git配置proxy/","content":"查看git配置git config --listgit config --global --list 配置proxy两种proxy方式 走httphttps形式：git clone https://github.com/xxxxx走ssh 形式：git clone git@github.com:xxxxx 走httphttpsgit config --global http.proxy http://127.0.0.1:7890git config --global https.proxy https://127.0.0.1:7890 取消proxygit config --global --unset http.proxygit config --global --unset https.proxy 走ssh 修改 .sshconfig 文件（不存在则新建，Windows 一般在 C:\\Users\\YourName.ssh)文件夹下面新建一个文件 config，注意没有任何后缀名，就叫 config）： # 必须是 github.comHost github.com HostName github.com User git # 走 HTTP 代理 ProxyCommand connect -H 127.0.0.1:7890 %h %p","tags":["Git"]},{"title":"Hello World","path":"/2025/09/23/hello-world/","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new My New Post More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment"}]